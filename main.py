import vk_api
from flask import Flask, request
import os
from transformers import pipeline

# –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–∏—Ö –±—É–¥–µ–º –∑–∞–¥–∞–≤–∞—Ç—å –≤ Render.com –ø–æ–∑–∂–µ)
VK_TOKEN = os.environ.get("VK_TOKEN")
GROUP_ID = os.environ.get("GROUP_ID")
CONFIRMATION_STRING = os.environ.get("CONFIRMATION_STRING")

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –í–ö —Å –ø–æ–º–æ—â—å—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ API-—Ç–æ–∫–µ–Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
vk_session = vk_api.VkApi(token=VK_TOKEN)
vk = vk_session.get_api()

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ —Å Hugging Face –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
generator = pipeline('text-generation', model='cointegrated/rubert-tiny')

# Flask - —ç—Ç–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = Flask(__name__)

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
def generate_answer(prompt):
    responses = generator(prompt, max_length=100, num_return_sequences=1, do_sample=True)
    generated_text = responses[0]['generated_text']
    # –£–±–∏—Ä–∞–µ–º –∏–∑ –æ—Ç–≤–µ—Ç–∞ –ø–æ–≤—Ç–æ—Ä –≤–æ–ø—Ä–æ—Å–∞:
    answer = generated_text[len(prompt):].strip()
    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç:
    if len(answer) < 3:
        answer = "–•–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å! ü§î"
    return answer

# –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
@app.route('/', methods=['POST'])
def vk_webhook():
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏—à–µ–¥—à–∏–π –∑–∞–ø—Ä–æ—Å –æ—Ç –í–ö
    data = request.json

    # –ù–∞ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏—Å—ã–ª–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É
    if data['type'] == 'confirmation':
        return CONFIRMATION_STRING

    # –ï—Å–ª–∏ –ø—Ä–∏—à—ë–ª –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–ø–∏—Å–∏
    if data['type'] == 'wall_reply_new':
        comment = data['object']
        comment_id = comment['id']
        post_id = comment['post_id']
        user_text = comment['text']

        # –¢—É—Ç AI –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        reply_text = generate_answer(user_text)

        # –ü—É–±–ª–∏–∫—É–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π-–æ—Ç–≤–µ—Ç –≤ –≤–µ—Ç–∫–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –í–ö
        vk.wall.createComment(
            owner_id=-int(GROUP_ID),
            post_id=post_id,
            reply_to_comment=comment_id,
            message=reply_text
        )

    # –í–ö–æ–Ω—Ç–∞–∫—Ç–µ —Ç—Ä–µ–±—É–µ—Ç –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–æ–π –æ—Ç–≤–µ—Ç, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω:
    return 'ok', 200
    import os
import requests

HUGGINGFACE_TOKEN = os.environ['HUGGINGFACE_TOKEN']

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ API Hugging Face (–ª—ë–≥–∫–∞—è –º–æ–¥–µ–ª—å)
def generate_ai_answer(user_text):
    API_URL = "https://api-inference.huggingface.co/models/sberbank-ai/rugpt3small_based_on_gpt2"
    headers = {"Authorization": f"Bearer {HUGGINGFACE_TOKEN}"}

    response = requests.post(API_URL, headers=headers, json={"inputs": user_text})

    if response.status_code != 200:
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å."

    generated_text = response.json()[0]['generated_text']
    reply = generated_text[len(user_text):].strip()
    return reply

# –∑–∞–ø—É—Å–∫ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ render.com)
if __name__ == '__main__':
    app.run()
